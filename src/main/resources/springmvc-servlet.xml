<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.2.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
    <mvc:default-servlet-handler />
	<!-- 配置开启注解 -->
	<mvc:annotation-driven/>
    <!--  启用自动扫描   -->
    <context:component-scan base-package="com.ways.*" use-default-filters="false">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    	<!-- <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> -->
    	<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/> -->
    </context:component-scan>
    <!-- 处理请求时返回json字符串的中文乱码问题 -->
   <!--  <mvc:annotation-driven> <mvc:message-converters> <bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
        <property name="supportedMediaTypes"> <list> <value>application/json;charset=UTF-8</value> 
        </list> </property> </bean> </mvc:message-converters> </mvc:annotation-driven> -->
	<!-- 静态资源访问 -->
	<mvc:resources location="/" mapping="/**/*.html"/>  
	<mvc:resources location="/" mapping="/**/*.js"/>  
	<mvc:resources location="/" mapping="/**/*.css"/>  
	<mvc:resources location="/" mapping="/**/*.png"/>  
	<mvc:resources location="/" mapping="/**/*.gif"/> 
	
	<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">  
	    <property name="interceptors">  
	        <list>  
	           <ref bean="handlerInterceptor1"/>  
	          <ref bean="handlerInterceptor2"/>  
	        </list>  
	    </property>  
	</bean>  -->
	<mvc:interceptors>  
	   <!--  使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求   -->
	    <!-- <bean class="com.bybo.aca.web.interceptor.Login"/> -->   
	    <mvc:interceptor>  
	        <!-- 进行拦截：/**表示拦截所有controller -->
	        <mvc:mapping path="/**" />
			<!-- 不进行拦截<mvc:exclude-mapping path="/index.html"/> -->
			<mvc:exclude-mapping path="/login.html"/>
			<mvc:exclude-mapping path="/index.html"/>
			<mvc:exclude-mapping path="/tpl/**"/>
			<mvc:exclude-mapping path="/page/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/img/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/userLoginController/getUserLoginInfo"/>
	        <bean class="com.ways.interceptor.WebLoginInterceptor"/>  
	    </mvc:interceptor>  
	</mvc:interceptors>    
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/" />
        <property name="suffix" value="" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean name="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
</beans>